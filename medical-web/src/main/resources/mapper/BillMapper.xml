<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.taotaotech.dao.BillMapper">
    <resultMap id="BaseResultMap" type="Bill">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="date" property="date" jdbcType="VARCHAR"/>
        <result column="number" property="number" jdbcType="INTEGER"/>
        <result column="client_code" property="clientCode" jdbcType="VARCHAR"/>
        <result column="client_name" property="clientName" jdbcType="VARCHAR"/>
        <result column="two_level_code" property="twoLevelCode" jdbcType="VARCHAR"/>
        <result column="two_level_name" property="twoLevelName" jdbcType="VARCHAR"/>
        <result column="three_level_code" property="threeLevelCode" jdbcType="VARCHAR"/>
        <result column="three_level_name" property="threeLevelName" jdbcType="VARCHAR"/>
        <result column="user_code" property="userCode" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="medicine_name" property="medicineName" jdbcType="VARCHAR"/>
        <result column="medicine_code" property="medicineCode" jdbcType="VARCHAR"/>
        <result column="regional" property="regional" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, code, date, number,client_code,client_name,two_level_code,two_level_name,three_level_code,three_level_name,user_code,user_name,medicine_name,medicine_code,regional
  </sql>
    <select id="get" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from bill
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bill
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="Bill">
    insert into bill (id, code, date,client_code,client_name,user_code,two_level_code,three_level_code,
      number,user_name,medicine_name,medicine_code,two_level_name,three_level_name,regional)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{date,jdbcType=VARCHAR}, #{clientCode,jdbcType=VARCHAR},
    #{clientName,jdbcType=VARCHAR},#{userCode,jdbcType=VARCHAR}, #{twoLevelCode,jdbcType=VARCHAR},
    #{threeLevelCode,jdbcType=VARCHAR},#{number,jdbcType=INTEGER},#{userName,jdbcType=VARCHAR},#{medicineName,jdbcType=VARCHAR}
     ,#{medicineCode,jdbcType=VARCHAR},#{twoLevelName,jdbcType=VARCHAR},#{threeLevelName,jdbcType=VARCHAR},#{regional,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="Bill">
        insert into bill
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="date != null">
                date,
            </if>
            <if test="number != null">
                number,
            </if>
            <if test="clientCode != null">
                client_code,
            </if>
            <if test="clientName != null">
                client_name,
            </if>
            <if test="userCode != null">
                user_code,
            </if>
            <if test="twoLevelCode != null">
                two_level_code,
            </if>
            <if test="twoLevelName != null">
                two_level_name,
            </if>
            <if test="threeLevelCode != null">
                three_level_code,
            </if>
            <if test="threeLevelName != null">
                three_level_name,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="medicineName != null">
                medicine_name,
            </if>
            <if test="medicineCode != null">
                medicine_code,
            </if>
            <if test="regional != null">
                regional,
            </if>
            <if test="createDate != null" >
                create_date,
            </if>
            <if test="updateDate != null" >
                update_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                #{date,jdbcType=VARCHAR},
            </if>
            <if test="number != null">
                #{number,jdbcType=INTEGER},
            </if>
            <if test="clientCode != null">
                #{clientCode,jdbcType=INTEGER},
            </if>
            <if test="clientName != null">
                #{clientName,jdbcType=INTEGER},
            </if>
            <if test="userCode != null">
                #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="twoLevelCode != null">
                #{twoLevelCode,jdbcType=VARCHAR},
            </if>
            <if test="twoLevelName != null">
                #{twoLevelName,jdbcType=VARCHAR},
            </if>
            <if test="threeLevelCode != null">
                #{threeLevelCode,jdbcType=VARCHAR},
            </if>
            <if test="threeLevelName != null">
                #{threeLevelName,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="medicineName != null">
                #{medicineName,jdbcType=VARCHAR},
            </if>
            <if test="medicineCode != null">
                #{medicineCode,jdbcType=VARCHAR},
            </if>
            <if test="regional != null">
                #{regional,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null" >
                #{createDate,jdbcType=DATE},
            </if>
            <if test="updateDate != null" >
                #{updateDate,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <update id="update" parameterType="Bill">
        update bill
        <set>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                date = #{date,jdbcType=VARCHAR},
            </if>
            <if test="number != null">
                number = #{number,jdbcType=INTEGER},
            </if>
            <if test="clientCode != null">
                client_code = #{clientCode,jdbcType=INTEGER},
            </if>
            <if test="clientName != null">
                client_name = #{clientName,jdbcType=INTEGER},
            </if>
            <if test="userCode != null">
                user_code = #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="twoLevelCode != null">
                two_level_code = #{twoLevelCode,jdbcType=VARCHAR},
            </if>
            <if test="twoLevelName != null">
                two_level_name = #{twoLevelName,jdbcType=VARCHAR},
            </if>
            <if test="threeLevelCode != null">
                three_level_code = #{threeLevelCode,jdbcType=VARCHAR},
            </if>
            <if test="threeLevelName != null">
                three_level_name = #{threeLevelName,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="medicineName != null">
                medicine_name = #{medicineName,jdbcType=VARCHAR},
            </if>
            <if test="medicineCode != null">
                medicine_code = #{medicineCode,jdbcType=VARCHAR},
            </if>
            <if test="regional != null">
                regional = #{regional,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null" >
                update_date = #{updateDate,jdbcType=DATE},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="Bill">
    update bill
    set code = #{code,jdbcType=VARCHAR},
      date = #{date,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER}
      client_code = #{clientCode,jdbcType=INTEGER}
      client_name = #{clientName,jdbcType=INTEGER}
      user_code = #{userCode,jdbcType=VARCHAR},
      two_level_code = #{twoLevelCode,jdbcType=VARCHAR},
      two_level_name = #{twoLevelName,jdbcType=VARCHAR},
      three_level_code = #{threeLevelCode,jdbcType=VARCHAR},
      three_level_name = #{threeLevelName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      medicine_name = #{medicineName,jdbcType=VARCHAR},
      medicine_code = #{medicineCode,jdbcType=VARCHAR},
      regional = #{regional,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="findList" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from bill b
        <where>
            del_flag = 0
            <if test="clientCode != null">
               AND client_code LIKE '%${clientCode}%'
            </if>
            <if test="clientName != null">
                AND client_name LIKE  '%${clientName}%'
            </if>
            <!--<if test="userCode != null">-->
                <!--AND user_code LIKE  '%${userCode}%'-->
            <!--</if>-->
            <if test="twoLevelCode != null">
                AND  two_level_code LIKE  '%${twoLevelCode}%'
            </if>
            <if test="twoLevelName != null">
                AND  two_level_name LIKE  '%${twoLevelName}%'
            </if>
            <if test="threeLevelCode != null">
                AND three_level_code LIKE  '%${threeLevelCode}%'
            </if>
            <if test="threeLevelName != null">
                AND three_level_name LIKE  '%${threeLevelName}%'
            </if>
            <if test="userName != null">
                AND user_name LIKE  '%${userName}%'
            </if>
            <if test="medicineName != null">
                AND  medicine_name LIKE  '%${medicineName}%'
            </if>
            <if test="medicineCode != null">
                AND  medicine_code LIKE  '%${medicineCode}%'
            </if>
            <if test="userCode != null">
               AND user_code = #{userCode,jdbcType=VARCHAR}
            </if>
        </where>
        ORDER BY b.date DESC
    </select>

    <select id="isNotCurrentMonthData" resultType="java.lang.Boolean" parameterType="java.util.List">
        select  COUNT(b.id)  FROM bill b WHERE id IN
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        AND month(b.date)!=month(SYSDATE())
    </select>

    <select id="existByBillCode" resultType="java.lang.Boolean">
    select
    COUNT(id)
    from bill
    where code = #{code,jdbcType=VARCHAR}
  </select>

    <update id="delete" parameterType="java.lang.Integer">
        update bill set del_flag = 1
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>